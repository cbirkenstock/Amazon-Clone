CREATE TABLE Users (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    balance FLOAT NOT NULL,  --constrain this + all other price fields to have 2 decimal places?
    image VARCHAR(256) NOT NULL, 
    CHECK (balance >= 0)
);

CREATE TABLE Sellers(	--think ab putting in shop name field
    id INT NOT NULL REFERENCES Users(id),
    address VARCHAR(4096) NOT NULL,
    PRIMARY KEY(id)
);

CREATE TABLE Products (
    product_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    seller_id INT NOT NULL REFERENCES Users(id),
    name VARCHAR(255) NOT NULL,
    quantity INTEGER NOT NULL,
    category VARCHAR(256) NOT NULL,
    description VARCHAR(4096) NOT NULL, 
    price FLOAT NOT NULL,
    available BOOLEAN DEFAULT TRUE,
    image VARCHAR(256) NOT NULL,    
    CHECK (quantity >= 0),
    CHECK (price >= 0)
);


CREATE TABLE Purchases (
    order_id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id INT NOT NULL REFERENCES Users(id),
    total_amount FLOAT NOT NULL,
    num_items INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    address VARCHAR(4096) NOT NULL,
    fulfillment_status BOOLEAN NOT NULL DEFAULT FALSE,
    CHECK (total_amount >= 0),
    CHECK (num_items > 0)
);

CREATE TABLE ProductReviews (
 user_id INT NOT NULL REFERENCES Users(id),
 product_id INT NOT NULL REFERENCES Products(product_id),
 review_date TIMESTAMP NOT NULL,
 rating INT NOT NULL CHECK (rating >= 1 and rating <= 5),
 description VARCHAR(4096),
 PRIMARY KEY(user_id, product_id)
);

CREATE TABLE SellerReviews (
 buyer_id INT NOT NULL REFERENCES Users(id),
 seller_id INT NOT NULL REFERENCES Sellers(id),
 review_date TIMESTAMP NOT NULL,
 rating INT NOT NULL CHECK (rating > 0 and rating < 6),
 description VARCHAR(4096),   
 PRIMARY KEY(buyer_id, seller_id),
 CHECK (buyer_id != seller_id)
);

CREATE TABLE CartEntries (
 user_id INT NOT NULL REFERENCES Users(id),
 product_id INT NOT NULL REFERENCES Products(product_id), 
 quantity INT NOT NULL CHECK (quantity > 0),      
 PRIMARY KEY(user_id, product_id)
);

CREATE TABLE OrderedItems (
 order_id INT NOT NULL REFERENCES Purchases(order_id),    
 product_id INT NOT NULL REFERENCES Products(product_id),  
 fulfillment_status BOOLEAN NOT NULL,
 quantity INT NOT NULL CHECK (quantity > 0),
 price_paid FLOAT NOT NULL CHECK (price_paid >= 0) 
);

CREATE TABLE SavedForLater
(
 user_id INT NOT NULL REFERENCES Users(id),
 product_id INT NOT NULL REFERENCES Products(product_id),
 PRIMARY KEY(user_id, product_id)
); 

--one suggested xtra feature to implement is cupon idk how to spell it codes for different products
--maybe we should make a ValidCupon(product_id, cupon_code, discount) table
